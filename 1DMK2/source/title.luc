module title (
    input row[4],
    input col[7],
    output sneksout,
    output planeout
  ) {
  
  sig sneksarr[32][64];
  sig sneks[11][42];
  sig planearr[32][64];
  sig plane[5][38];
  sig zeros[32][64];
  var numRow;

  always {
    zeros = {64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0};
    sneksout = 0;
    planeout = 0;
    
    sneksarr = zeros;
    planearr = zeros;
    
    sneks = {b011100001100011001111111001100001100011100, b111110001110011001111111001100011100111110, b110011000111011000000011001100011100110011, b000011000011111000000011001100111100000011, b000110000001111000111111001100101100000110, b001100000000111000111111001101101100001100, b011000000001111000000011001101001100011000, b110000000011111000000011001111001100110000, b110011000111011000000011001110001100110011, b011111001110011001111111001110001100011111, b001110001100011001111111001100001100001110};
    plane = {b11101001001100001011100011000100100110, b00101011010010001010100100100101101001, b11101101011110001011100111100110101001, b00101001010010001000100100100100101001, b11101001010010111000100100100100100110};

    for (numRow = 5; numRow < 16; numRow++){
      sneksarr[numRow] = 0 + sneks[15 - numRow] << 12;
    }
    for (numRow = 19; numRow < 24; numRow++){
      planearr[numRow] = 0 + plane[23 - numRow] << 14;
    }
    
    sneksout = sneksarr[row][col];
    planeout = planearr[row + 16][col];
    
  }
}
