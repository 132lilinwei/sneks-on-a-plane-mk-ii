module title (
    input row[5],
    input col[7],
    output sneksout,
    output planeout
  ) {
  
  sig sneksarr[32][64];
  sig sneks[11][41];
  sig planearr[32][64];
  sig plane[5][35];
  sig zeros[32][64];
  var numRow;

  always {
    zeros = {64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0,64b0};
    sneksout = 0;
    planeout = 0;
    
    sneksarr = zeros;
    planearr = zeros;
    
    sneks = {b01110000110001100111111001100001100011100, b11111000111001100111111001100011100111110, b11001100011101100000011001100011100110011, b00001100001111100000011001100111100000011, b00011000000111100011111001100101100000110, b00110000000011100011111001101101100001100, b01100000000111100000011001101001100011000, b11000000001111100000011001111001100110000, b11001100011101100000011001110001100110011, b01111100111001100111111001110001100011111, b00111000110001100111111001100001100001110};
    plane = {b11101001011100010111001110010010111, b00101011010100010101001010010110101, b11101101011100010111001110011010101, b00101001010100010001001010010010101, b11101001010101110001001010010010111};

    for (numRow = 5; numRow < 16; numRow++){
      sneksarr[numRow] = 0 + sneks[15 - numRow] << 13;
    }
    for (numRow = 18; numRow < 23; numRow++){
      planearr[numRow] = 0 + plane[22 - numRow] << 16;
    }
    
    sneksout = sneksarr[row][col];
    planeout = planearr[row + 16][col];
    
  }
}
