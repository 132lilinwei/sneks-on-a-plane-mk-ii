/*
   This file was generated automatically by the Mojo IDE version B1.3.5.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    output reg spi_miso,
    output reg [3:0] spi_channel,
    output reg avr_rx,
    input joystickaUp,
    input joystickaDown,
    input joystickaLeft,
    input joystickaRight,
    input joystickbUp,
    input joystickbDown,
    input joystickbLeft,
    input joystickbRight,
    input start,
    output reg r0,
    output reg r1,
    output reg g0,
    output reg g1,
    output reg bl0,
    output reg bl1,
    output reg latch,
    output reg rowsel0,
    output reg rowsel1,
    output reg rowsel2,
    output reg rowsel3,
    output reg dispclk,
    output reg blank
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_process_r0;
  wire [1-1:0] M_process_g0;
  wire [1-1:0] M_process_bl0;
  wire [1-1:0] M_process_r1;
  wire [1-1:0] M_process_g1;
  wire [1-1:0] M_process_bl1;
  wire [1-1:0] M_process_latch;
  wire [1-1:0] M_process_blank;
  wire [4-1:0] M_process_rowsel;
  wire [1-1:0] M_process_dclk;
  reg [1-1:0] M_process_clk;
  reg [1-1:0] M_process_rst;
  reg [1-1:0] M_process_start;
  reg [1-1:0] M_process_joystickaUp;
  reg [1-1:0] M_process_joystickaDown;
  reg [1-1:0] M_process_joystickaLeft;
  reg [1-1:0] M_process_joystickaRight;
  reg [1-1:0] M_process_joystickbUp;
  reg [1-1:0] M_process_joystickbDown;
  reg [1-1:0] M_process_joystickbLeft;
  reg [1-1:0] M_process_joystickbRight;
  process_1 process (
    .clk(M_process_clk),
    .rst(M_process_rst),
    .start(M_process_start),
    .joystickaUp(M_process_joystickaUp),
    .joystickaDown(M_process_joystickaDown),
    .joystickaLeft(M_process_joystickaLeft),
    .joystickaRight(M_process_joystickaRight),
    .joystickbUp(M_process_joystickbUp),
    .joystickbDown(M_process_joystickbDown),
    .joystickbLeft(M_process_joystickbLeft),
    .joystickbRight(M_process_joystickbRight),
    .r0(M_process_r0),
    .g0(M_process_g0),
    .bl0(M_process_bl0),
    .r1(M_process_r1),
    .g1(M_process_g1),
    .bl1(M_process_bl1),
    .latch(M_process_latch),
    .blank(M_process_blank),
    .rowsel(M_process_rowsel),
    .dclk(M_process_dclk)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    M_process_start = ~start;
    M_process_joystickaLeft = joystickaLeft;
    M_process_joystickaUp = joystickaUp;
    M_process_joystickaRight = joystickaRight;
    M_process_joystickaDown = joystickaDown;
    M_process_joystickbLeft = joystickbLeft;
    M_process_joystickbUp = joystickbUp;
    M_process_joystickbRight = joystickbRight;
    M_process_joystickbDown = joystickbDown;
    M_process_clk = clk;
    M_process_rst = rst;
    r0 = M_process_r0;
    g0 = M_process_g0;
    bl0 = M_process_bl0;
    r1 = M_process_r1;
    g1 = M_process_g1;
    bl1 = M_process_bl1;
    latch = M_process_latch;
    blank = M_process_blank;
    rowsel0 = M_process_rowsel[0+0-:1];
    rowsel1 = M_process_rowsel[1+0-:1];
    rowsel2 = M_process_rowsel[2+0-:1];
    rowsel3 = M_process_rowsel[3+0-:1];
    dispclk = M_process_dclk;
  end
endmodule
